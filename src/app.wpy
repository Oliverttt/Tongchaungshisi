<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: ["pages/index", "pages/discover", "pages/personal"],
    subPackages: [
      // {
      //   root: "shisi-page/",
      //   pages: [
      //     "pages/",
      //   ]
      // },
      {
        root: "publish-page/",
        pages: [
          "pages/publish",
        ]
      },
      {
        root: "discover-page/",
        pages: [
          "pages/detail",
        ]
      },
      // {
      //   root: "personal-page/",
      //   pages: [
      //     "pages/",
      //   ]
      // }
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '同窗食肆',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      color: "#353535",
      selectedColor: "#c73420",
      list: [
        {
          pagePath: "pages/index",
          text: "食肆",
          iconPath: "assets/食堂2.png",
          selectedIconPath: "assets/食堂1.png"
        },
        {
          pagePath: "pages/discover",
          text: "发现",
          iconPath: "assets/发现.png",
          selectedIconPath: "assets/发现2.png"
        },
        {
          pagePath: "pages/personal",
          text: "我的",
          iconPath: "assets/我的.png",
          selectedIconPath: "assets/我的2.png"
        }
      ]
    },
    navigateToMiniProgramAppIdList: ["wx8abed0069c3706f5"]
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
